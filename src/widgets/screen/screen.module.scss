@use "sass:color" as *;
@use "sass:math" as *;
@use "@/styles/abstracts" as *;

.screen {
  position: relative;
  border: to-rem(3) solid var(--color-primary, $color-primary);
  border-radius: to-rem(25);
  filter: brightness(0.8) sepia(50%);

  &::before,
  &::after {
    @include pseudo;

    z-index: var(--z-index-1, $z-index-1);
    inset: to-rem(-1);
    border-radius: inherit;
  }

  &::before {
    box-shadow: 0 0 to-rem(80) to-rem(60) var(--color-primary, $color-primary) inset;
    background-image:
      linear-gradient(
        scale($color-primary, $alpha: -100%) 50%,
        scale(scale($color-primary, $alpha: -10%), $alpha: -65%) 50%
      ),
      linear-gradient(
        90deg,
        scale($color-secondary-red, $alpha: -94%),
        scale($color-secondary-green, $alpha: -98%),
        scale($color-secondary-blue, $alpha: -94%)
      );
    background-size:
      100% to-rem(3),
      to-rem(4) 100%;

    @media (width >= 58.75rem) {
      box-shadow: 0 0 to-rem(120) to-rem(100) var(--color-primary, $color-primary)
        inset;
    }
  }

  &::after {
    transition:
      background-color var(--default-transition, 0.2s ease-in-out),
      animation var(--default-transition, 0.2s ease-in-out);
  }

  &.noise {
    &::after {
      background-color: scale($color-primary, $alpha: -90%);
      animation: noise infinite var(--default-transition, $default-transition);

      @keyframes noise {
        $steps: 50;

        @for $index from 0 through $steps {
          #{percentage($index * div(1, $steps))} {
            opacity: random();
          }
        }
      }
    }
  }
}
